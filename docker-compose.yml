
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
    ports:
      - "3000:80"
    depends_on:
      - api

  api:
    build: 
      context: ./api
      args:
        - NODE_ENV=production
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app
      - ./frontend/dist:/app/frontend/dist
      - api-artifacts:/app/artifacts
    env_file:
      - ./.env
    environment:
      - GROBID_URL=http://grobid:8070
      - NEO4J_URI=bolt://db:7687
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000 # Chroma's internal port
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 12G  # Increased memory for model loading
    shm_size: '4gb'  # Increased shared memory for PyTorch
    depends_on:
      grobid:
        condition: service_healthy
      db:
        condition: service_started
      chromadb:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s  # Give more time for the model to load

  db:
    image: neo4j:5-community
    ports:
      - "7474:7474" 
      - "7687:7687" 
    environment:  
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.meta.data,apoc.*
    volumes:
      - neo4j-data:/data

  chromadb:
    image: chromadb/chroma
    ports:
      - "8001:8000"  
    volumes:
      - chroma-data:/chroma

  grobid:
    image: grobid/grobid:0.8.0 
    ports:
      - "8070:8070"
      - "8071:8071" # Admin port
    environment: 
      - JAVA_OPTS=-Xms2g -Xmx6g -XX:+UseG1GC
      - GROBID__PDF2XML_IMAGE_FORMAT=png
      - GROBID__TIMEOUT=120
    volumes:
      - grobid-config:/opt/grobid/grobid-home/config
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8070/api/isalive || exit 1"]
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 300s

volumes:
  neo4j-data:
  chroma-data:
  api-artifacts:
  grobid-config: